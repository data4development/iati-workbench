<?xml version="1.0" encoding="UTF-8"?>
<!--  IATI workbench: produce and use IATI data
  Copyright (C) 2016-2022, drostan.org and data4development.org
  
  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU Affero General Public License as published
  by the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.
  
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU Affero General Public License for more details.
  
  You should have received a copy of the GNU Affero General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->  
<project name="spreadsheet-iati"
  xmlns:if="ant:if"
  xmlns:unless="ant:unless">
  <description>
    Spreadsheet to IATI Engine
  </description>

  <target name="spreadsheet-iati"
    description="Create IATI XML file from spreadsheet and IATI input files, validate and summarise."
    depends="init, gather-input-files, generate-iati-partials, create-iati-output">
  </target>

  <extension-point name="gather-input-files"
    description="Gather input files into tmp in expected formats"
    depends="sheets-csvxml, collect-iati-files"/>

  <extension-point name="generate-iati-partials"
    description="Generate IATI partial activities for input files"
    depends="csvxml-s2i, iati-s2i, akvo-s2i"/>
  
  <extension-point name="create-iati-output"
    description="Merge IATI partial activities, validate, create clean output"
    depends="merge-iati, validate-iati, filter-activities"/>

  <!--Merge activities from *.generated.xml into one file.-->
  <target name="merge-iati"
    depends="ls-tmp">
    <xslt
      basedir="${ws}/tmp"
      destdir="${ws}/tmp"
      in="${ws}/tmp/ls.xml"
      out="${ws}/src/ls.xml"
      style="lib/iati.me/merge-generated-files.xslt"
    />
  </target>

  <!--Copy CSV files from the input folder-->
  <target name="csv-csv">
    <copy todir="${ws}/tmp">
      <fileset dir="${ws}/input" includes="*.csv"/>
    </copy>
  </target>

  <!--Copy IATI and Akvo files from the input folder-->
  <target name="collect-iati-files">
    <copy todir="${ws}/tmp" flatten="true">
      <fileset dir="${ws}/input" includes="**/*.iati.xml, **/*.akvo.xml"/>
    </copy>
  </target>
  
  <!--Convert spreadsheets to CSV files for further processing.-->
  <target name="excel-csv">
    <echo level="info">Convert spreadsheets to CSV files for further processing.</echo>

    <apply executable="soffice" dest="${ws}/tmp" verbose="false">
      <fileset dir="${ws}/input" includes="**/*.xls*"/>
      <mapper id="csv-out" type="regexp" from="(.+)\.xls.*$$" to="${ws}/tmp/\1.csv"/>

      <arg line="--headless"/>
      <!-- convert-to: explicitly save as UTF-8 (token 3, code=76) https://wiki.openoffice.org/wiki/Documentation/DevGuide/Spreadsheets/Filter_Options -->
      <arg line="--convert-to 'csv:Text - txt - csv (StarCalc):44,34,76,1,,,,,false'"/>
      <arg line="--outdir ${ws}/tmp"/>
      <srcfile/>
    </apply>
  </target>

  <target name="csvxml-s2i">
    <available property="config-present" file="${ws}/config/csvxml-iati.xslt"/>
    <echo level="error" unless:set="config-present">
      There is no configuration how to transform these spreadsheets into IATI.
    </echo>
    <dependset>
      <srcfilelist dir="${ws}/config" files="csvxml-iati.xslt"/>
      <targetfileset dir="${ws}/tmp" includes="*.generated.xml"/>
    </dependset>
    <copy file="/home/iati-workbench/workspace/config/sheets-iati.xslt" todir="${ws}/config"/>
    <xslt if:set="config-present"
      basedir="${ws}/tmp"
      includes="*.csv.xml"
      destdir="${ws}/tmp"
      extension=".generated.xml"
      filenameparameter="filename"
      style="${ws}/config/sheets-iati.xslt"
     />
  </target>

  <!--Transform existing IATI input files into a version with merge ids.-->
  <target name="iati-s2i">
    <xslt
      basedir="${ws}/input/"
      includes="*.iati.xml"
      destdir="${ws}/tmp"
      extension=".generated.xml"
      style="transform/add-merge-ids.xslt"
     />
  </target>

  <!--Transform existing Akvo input files using workspace-based config.-->
  <target name="check-akvo-config">
    <available property="has.akvo.config" file="${ws}/config/akvo-s2i.xslt"/>
  </target>
  <target name="akvo-s2i" depends="check-akvo-config" if="has.akvo.config">
    <xslt
      basedir="${ws}/tmp/"
      includes="*.akvo.xml"
      destdir="${ws}/tmp"
      extension=".generated.xml"
      style="${ws}/config/akvo-s2i.xslt"
     />
  </target>

  <target name="sheets-csvxml" depends="excel-csv, csv-csv">
    <sequential>
      <apply executable="basex" dest="${ws}/tmp" verbose="true">
        <fileset dir="${ws}/tmp" includes="*.csv"/>
        <srcfile prefix="-bfile="/>
        <arg value="-o"/>
        <targetfile/>
        <arg value="basex-queries/csv-csvxml.xq"/>
        <globmapper from="*.csv" to="*.csv.xml"/>
      </apply>
    </sequential>
  </target>

  <target name="iati-office"
    description="Create LibreOffice and Excel spreadsheets from IATI.">
    <dependset>
      <sources>
        <file file="lib/office/spreadsheet.xslt" />
      </sources>
      <targetfileset dir="${ws}/output" includes="*.xlsx" />
    </dependset>

    <xslt
      basedir="${ws}/src"
      includes="*.xml"
      destdir="${ws}/tmp"
      extension=".fods"
      filenameparameter="filename"
      style="spreadsheet-iati/default-iati-office.xslt"
    />

    <apply executable="soffice" dest="${ws}/output" verbose="false">
      <fileset dir="${ws}/tmp" includes="*.*.fods"/>
      <mapper type="glob" from="*.fods" to="*.xlsx"/>

      <arg line="--headless"/>
      <!-- convert-to: explicitly save as UTF-8 (token 3, code=76) -->
      <arg line="--convert-to xlsx:'Calc MS Excel 2007 XML'"/>
      <arg line="--outdir ${ws}/output"/>
      <srcfile/>
    </apply>
  </target>

  <target name="spreadsheet-map" depends="clean, sheets-csvxml, ls-tmp" description="Create a map of the input files">
    <xslt basedir="tmp"
      destdir="output"
      in="${ws}/tmp/ls.xml"
      out="${ws}/output/csv-map.csv"
      style="lib/iati.me/csvxml-map.xslt"
    />
  </target>
</project>
