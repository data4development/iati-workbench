#!/bin/bash

MY_PATH=$(dirname `readlink -f "$0"`)

if [ "$1." = "-d." ]; then
  shift

  # Use the local code of the engine if available
  if [[ -f "${MY_PATH}/this-is-iati-workbench" ]]; then
    DEVELOPER_MODE=true
    THIS_VERSION=`cat ${MY_PATH}/this-is-iati-workbench`
    echo "Running in developer mode: using the engine source code version:$THIS_VERSION at $MY_PATH"
    OTHER_VOLUMES="-v ${MY_PATH}:/home/iati-workbench"
  fi
fi

if [ "$1." = "-xml." ]; then
  shift
  
  LOGGING="-logger org.apache.tools.ant.XmlLogger -logfile /workspace/output/ant-log.xml"

  echo "Logging as XML to: /workspace/output/ant-log.xml"
fi

if [ "$1." = "-t." ]; then
  shift

  if [ "$1." = "this." ]; then
    DOCKER_TAG=${THIS_VERSION:-latest}
  else
    DOCKER_TAG="$1"
  fi
  shift

  echo -e "\nUsing Docker image tag version: ${DOCKER_TAG}\n"
else
  DOCKER_TAG=latest
fi

if [ "$1." = "-w." ]; then
  shift
  
  WORKSPACE="$1/"
  shift

  echo -e "\nUsing workspace subdirectory: ${WORKSPACE}\n"
  WORKSPACE="-Dworkspace=$WORKSPACE"
fi

case "$1." in
  "-h.")
    cat <<EOT

$(basename $0) [-d] [-xml] [-t <version>] <command>

Options (sequence is important):

  -d                     Run in developer mode: mount the directory where the 
                         iati-workbench code resides in the container as 
                         /home/iati-workbench.

  -xml                   Use Ant's XML logger and store the result in 
                         output/ant-log.xml
  -t <version>           Use the version tag to select the Docker image version.
                         Defaults to 'latest'. Use 'this' to indicate the
                         current version of the code (as specified in the file
                         this_is_iati_workbench).

  -h                     Show this help text.

Commands:

  (without parameters)   Shows the available 'targets' the engine can create.
  -p                     Idem.
  
  build                  Build a new docker image. MUST be combined with -d to
                         run in developer mode. It will be tagged as
                         iati-workbench:<version>, where version can be
                         specified with the -t option (defaults to 'latest').

EOT
    ;;
  "build.")
    if [[ -n ${DEVELOPER_MODE} ]]; then
      if [[ -f ${MY_PATH}/lib/xspec/build.xml ]]; then
        echo "Starting docker build for version ${DOCKER_TAG}"
        docker build --build-arg UID=$(id -u) --build-arg GID=$(id -g) -t iati-workbench:${DOCKER_TAG} ${MY_PATH:-.}
      else
        echo "Make sure to clone the submodules."
        echo "In ${MY_PATH}, run: git submodule update --recursive"
        exit 1
      fi
    else
      echo "Error: use '-d build' to build the docker image, and have the source code checked out."
      exit 1
    fi
    ;;

  *)
    if [ "${PWD}" = "${MY_PATH}" ]; then
      echo "Error: cannot run in engine source code directory"
      exit 1
    else
      echo -e "\nRunning $0 $@\n"
    
      docker run --rm -u=`id -u`:`id -g` \
        -v "${PWD}":/workspace \
        -m 3g \
        $OTHER_VOLUMES \
        iati-workbench:${DOCKER_TAG} ${LOGGING} ${WORKSPACE} $@
    fi
    ;;
esac
