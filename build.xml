<?xml version="1.0" encoding="UTF-8"?>
<project name="IATI Engine">
  <description>
    IATI Workbench
  </description>

  <!--
    Many build targets will be included from separate build files in their own
    folders. Only targets in this build file will benefit from command-line
    autocompletion.
  -->
  <import file="lib/build.xml"/>
  <import file="augment/build.xml"/>
  <import file="transform/build.xml"/>

  <target name="init"
    description="Set up the project environment.">

    <mkdir dir="/workspace/src"/>
    <mkdir dir="/workspace/config"/>
    <mkdir dir="/workspace/tmp"/>
    <mkdir dir="/workspace/input"/>
    <mkdir dir="/workspace/output"/>
    <mkdir dir="/workspace/reports"/>
  </target>

  <target name="clean"
    depends="init"
    description="Clean intermediary results.">
    <delete dir="/workspace/tmp"/>
    <echo>
      Intermediate results have been deleted.
      You will need to manually remove sources and outputs:
      - /workspace/src
      - /workspace/output
    </echo>
  </target>

  <target name="yed"
    description="Generate GraphML graphs for use in yEd."
    depends="graphml">
    <echo level="info">Generate yEd-enriched files from GraphML sources.</echo>
    <dependset>
      <sources>
        <file file="output/graphml-yed.xslt"/>
      </sources>
      <targetfileset dir="/workspace/output" includes="*.graphml"/>
    </dependset>
    <xslt
      basedir="/workspace/tmp/"
      includes="*.graphml"
      destdir="/workspace/output/"
      extension=".graphml"
      style="output/graphml-yed.xslt"
     />
  </target>

  <target name="feedback"
    description="Generate a data quality feedback report."
    depends="rules, htdocs-skeleton">
    <echo level="info">Provide a feedback report.</echo>
    <dependset>
      <sources>
        <fileset dir="lib/iati.me" />
      </sources>
      <targetfileset dir="/workspace/reports/htdocs" includes="*.report.html" />
    </dependset>
    <xslt
      basedir="/workspace/tmp/"
      includes="*.augmented.xml"
      destdir="/workspace/reports/htdocs"
      extension=".report.html"
      style="output/feedback.xslt"
     />
  </target>

  <target name="feedback-summary"
    description="Generate a summary data quality feedback report."
    depends="rules, htdocs-skeleton">
    <echo level="info">Provide a summary feedback report.</echo>
    <dependset>
      <sources>
        <fileset dir="lib/iati.me" />
      </sources>
      <targetfileset dir="/workspace/reports/htdocs" includes="*.summary.html" />
    </dependset>
    <xslt
      basedir="/workspace/tmp/"
      includes="*.all.xml"
      destdir="/workspace/reports/htdocs"
      extension=".html"
      style="output/feedback-summary.xslt"
     />
     <xslt
       basedir="/workspace/tmp/"
       includes="*.augmented.xml"
       destdir="/workspace/reports/htdocs"
       extension=".summary.html"
       style="output/feedback-summary.xslt"
      />
  </target>

  <target name="transactions-flow"
    description="Generate an overview of transactions."
    depends="filtered">
    <echo level="info">Generate an overview of transactions.</echo>
    <dependset>
      <sources>
        <file file="output/transactions.xslt" />
      </sources>
      <targetfileset dir="/workspace/reports/htdocs" includes="*.flows.html" />
    </dependset>
    <xslt
      basedir="/workspace/tmp/"
      includes="*.filtered.xml"
      destdir="/workspace/reports/htdocs"
      extension=".flows.html"
      style="output/transactions.xslt"
     />
  </target>

  <target name="more-up-down-stream" depends="init">
    <iati-query xquery="basex-queries/find-links-upstream-downstream.xq" src="/workspace/src" from="*.ids" to="*.extra"/>
  </target>

  <target name="find-links-upstream" depends="init">
    <iati-query xquery="basex-queries/find-links-upstream.xq" src="/workspace/src" from="*.ids" to="*.ids.up"/>
  </target>

  <target name="find-links-downstream" depends="init">
    <iati-query xquery="basex-queries/find-links-downstream.xq" src="/workspace/src" from="*.ids" to="*.ids.down"/>
  </target>

  <target name="get-activities" depends="init">
    <iati-query xquery="basex-queries/get-activities.xq" src="/workspace/src" from="*.ids" dest="/workspace/src" to="*.xml"/>
  </target>

  <target name="excel-csv"
    description="Convert spreadsheets to CSV files for further processing."
    depends="init">
    <echo level="info">Convert spreadsheets to CSV files for further processing.</echo>

    <apply executable="soffice" dest="/workspace/tmp" verbose="false">
      <fileset dir="/workspace/input" includes="*.xlsx"/>
      <mapper id="csv-out" type="glob" from="*.xlsx" to="/workspace/tmp/*.csv"/>

      <arg line="--headless"/>
      <!-- convert-to: explicitly save as UTF-8 (token 3, code=76) -->
      <arg line="--convert-to 'csv:Text - txt - csv (StarCalc):44,34,76,1,1'"/>
      <arg line="--outdir /workspace/tmp"/>
      <srcfile/>
    </apply>
  </target>

  <target name="make-iati"
    description="Merge activities within one file."
    depends="csvxml-iati, ls-tmp">
    <xslt
      basedir="/workspace/tmp"
      destdir="/workspace/tmp"
      in="/workspace/tmp/ls.xml"
      out="/workspace/tmp/iati.alpha.xml"
      style="lib/iati.me/merge-activities.xslt"
    />

    <exec executable="xmlstarlet" output="/workspace/tmp/iati-activities.xml">
      <arg line="fo /workspace/tmp/iati.alpha.xml"/>
    </exec>

    <schemavalidate
      file="/workspace/tmp/iati-activities.xml"
      noNamespaceFile="lib/schemata/2.02/iati-activities-schema.xsd"/>
    <echo level="info">Generated file passes validation, is copied to src/ directory.</echo>
    <copy file="/workspace/tmp/iati-activities.xml" todir="/workspace/src"/>
  </target>

  <target name="csv-csvxml" depends="excel-csv">
    <sequential>
      <apply executable="basex" dest="/workspace/tmp" verbose="true">
        <fileset dir="/workspace/tmp" includes="*.csv"/>
        <srcfile prefix="-bfile="/>
        <arg value="-o"/>
        <targetfile/>
        <arg value="basex-queries/csv-csvxml.xq"/>
        <mapper type="glob" from="*.csv" to="*.csv.xml"/>
      </apply>
    </sequential>
  </target>

  <target name="iati-office"
    description="Create LibreOffice spreadsheets from IATI."
    depends="init">
    <dependset>
      <sources>
        <file file="lib/office/spreadsheet.xslt" />
        <file file="/workspace/config/iati-office.xslt" />
      </sources>
      <targetfileset dir="/workspace/tmp" includes="*.ods.xml" />
    </dependset>
    <xslt
      basedir="/workspace/src"
      includes="*.xml"
      destdir="/workspace/tmp"
      extension=".ods.xml"
      filenameparameter="filename"
      style="lib/iati.me/iati-office.xslt"
    />
  </target>

  <target name="show-ids" depends="init">
    <iati-query xquery="basex-queries/show-ids.xq" src="/workspace/src" from="*.ids" to="*.txt"/>
  </target>

  <target name="activities" depends="htdocs-skeleton">
    <!-- <mkdir dir="/workspace/reports/htdocs/a"/> -->
    <xslt
      basedir="/workspace/src/"
      includes="*.xml"
      destdir="/workspace/reports/htdocs"
      extension=".act.xml"
      style="lib/htdocs/iati-activity.xslt"
     />
  </target>

  <target name="make-outputs" depends="yed,activities,feedback-summary"/>
</project>
